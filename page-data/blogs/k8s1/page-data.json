{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/k8s1/","result":{"data":{"site":{"siteMetadata":{"title":"Chenxiao's Blog","author":"Chenxiao Guan"}},"markdownRemark":{"id":"4d5f947a-9748-5f3e-afa3-7f49c1eb31c6","excerpt":"Etcd Etcd is a key-value store that runs on the master node, which stores cluster information in a key-value fashion. Basic Etcd operations Download Etcd fromâ€¦","html":"<h2>Etcd</h2>\n<p>Etcd is a key-value store that runs on the master node, which stores cluster information in a key-value fashion.</p>\n<h3>Basic Etcd operations</h3>\n<ol>\n<li>\n<p>Download Etcd from github, extract it and run locally</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./etcd</code></pre></div>\n<p>This command will start the etcd server at the port 2379 by default.</p>\n</li>\n<li>\n<p>Interact with Etcd through the <code class=\"language-text\">etcdctl</code> cli. For example: </p>\n<ul>\n<li>set a key value pair by running <code class=\"language-text\">etcdctl set key1 value1</code></li>\n<li>retrieve the value of a key by running <code class=\"language-text\">etcdctl get key1</code></li>\n<li>to get some help, just run <code class=\"language-text\">etcdctl</code> without any arguments.</li>\n</ul>\n</li>\n<li>One can set the API version of the etcdctl by setting the env var <code class=\"language-text\">ETCDCTL_API</code>. For example, setting it by doing <code class=\"language-text\">export ETCDCTL_API=3</code> will use version 3 of the API. </li>\n</ol>\n<h2>Kube-Scheduler</h2>\n<p>The Kube-scheduler decides what pod should go to what worker node. However, keep in mind that the kube-scheduler only <strong>decides</strong> where should the pod go, but it is the kube-apiserver that actually talks to the kubelet in order to actually deploy that pod on the corresponding worker node. </p>\n<p>What is the process of a kube-scheduler determining the schedule of a pod?</p>\n<ol>\n<li>Filter Nodes. The scheduler filters all worker nodes based on the requirement of the pod, e.g. number of cpus, amount of rams, etc.</li>\n<li>Rank Nodes. The scheduler then ranks all qualified worker nodes by a ranking algorithm (can be customized). </li>\n</ol>","frontmatter":{"title":"Preparation for the CKA Exam 01","date":"June 30, 2020","description":"Notes for the preparation of the CKA exam"}}},"pageContext":{"slug":"/k8s1/","previous":{"fields":{"slug":"/memo-js/"},"frontmatter":{"title":"My Memo For the Algorithmic Interviews"}},"next":null}}}