{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/blogs/index.js","webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js"],"names":["bioQuery","Bio","query","render","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","instagram","BlogIndex","this","props","siteTitle","title","posts","allMarkdownRemark","edges","location","keywords","map","node","frontmatter","fields","slug","key","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","DefaultContext","color","undefined","size","className","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","IconBase","Tree2Element","tree","tag","child","elem","conf","computedSize","svgProps","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer"],"mappings":"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","file":"component---src-pages-blogs-index-js-d55b9fa67087d79f7d67.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { FaRssSquare } from 'react-icons/fa'\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(0),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong>.{` `}\n              <a href={`https://instagram.com/${social.instagram}`}>\n                Follow his Instagram.\n              </a>\n              <br />\n              Subscribe to my <a href=\"/rss.xml\"> RSSs <FaRssSquare /> </a> Feed.\n              \n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          instagram\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../../components/bio\";\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport { rhythm } from \"../../utils/typography\";\n\nimport \"./index.css\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={this.props.location} title={siteTitle}>\n          <SEO\n            title=\"All posts\"\n            keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n          />\n          <Bio />\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            return (\n              <div key={node.fields.slug}>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link\n                    style={{ boxShadow: `none` }}\n                    to={`/blogs${node.fields.slug}`}\n                  >\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </div>\n            );\n          })}\n        </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"sourceRoot":""}